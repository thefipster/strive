<Headline Text="Inventory"></Headline>

@if (_entries.Any())
{
    <MudStack Class="mb-10" Row="true">
        @for (int i = _years.Min(); i <= DateTime.UtcNow.Year; i++)
        {
            var year = i;

            @if (_years.Contains(year))
            {
                @if (year == _selectedYear)
                {
                    <MudButton Href="@($"/inventory?year={year}")"
                               Variant="Variant.Outlined">
                        @year
                    </MudButton>
                }
                else
                {
                    <MudButton Href="@($"/inventory?year={year}")"
                               Variant="Variant.Text">
                        @year
                    </MudButton>
                }
            }
            else
            {
                <MudButton Variant="Variant.Text"
                           Disabled=true>
                    @year
                </MudButton>
            }
        }
    </MudStack>

    <MudStack Class="pr-5   ">
        @for (int i = 1; i <= 12; i++)
        {
            var month = i;

            <MudStack Class="my-3" Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Baseline">
                <MudText Typo="Typo.button" Style="width: 100px;">
                    @CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)
                </MudText>
                <MudStack Class="flex-grow-1" Row="true" Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Baseline">
                    @for (int j = 1; j <= 31; j++)
                    {
                        var day = j;

                        @if (DateChecker.IsValidDate(_selectedYear, month, day))
                        {
                            var entries = _entries.Where(x => x.Year == _selectedYear && x.Month == month && x.Day == day).ToArray();

                            @if (entries.Any(x => x.Kind == DataKind.Day) && entries.Any(x => x.Kind == DataKind.Session))
                            {
                                <MudBadge T="string" Color="Color.Secondary">
                                    <MudButton Class="day-button"
                                               OnClick="@(() => OnDayClicked(_selectedYear, month, day))"
                                               Variant="Variant.Outlined" Size="Size.Medium">@day</MudButton>
                                </MudBadge>
                            }
                            else if (entries.Any(x => x.Kind == DataKind.Day))
                            {
                                <MudBadge T="string" Color="Color.Info">
                                    <MudButton Class="day-button"
                                               OnClick="@(() => OnDayClicked(_selectedYear, month, day))"
                                               Variant="Variant.Outlined" Size="Size.Small">@day</MudButton>
                                </MudBadge>
                            }
                            else if (entries.Any(x => x.Kind == DataKind.Session))
                            {
                                <MudBadge T="string" Color="Color.Primary">
                                    <MudButton Class="day-button"
                                               OnClick="@(() => OnDayClicked(_selectedYear, month, day))"
                                               Variant="Variant.Outlined" Size="Size.Small">@day</MudButton>
                                </MudBadge>
                            }
                            else
                            {
                                <MudBadge T="string" Color="Color.Transparent">
                                    <MudButton Class="day-button"
                                               Variant="Variant.Text" Size="Size.Small">@day</MudButton>
                                </MudBadge>
                            }
                        }
                        else
                        {
                            <MudBadge T="string" Color="Color.Transparent">
                                <MudButton Class="day-button" Color="Color.Transparent"
                                           Variant="Variant.Text" Size="Size.Small"></MudButton>
                            </MudBadge>
                        }
                    }
                </MudStack>
            </MudStack>
        }
    </MudStack>
}

@if (_selectedDate != null)
{
    <MudTable @ref="_dataTable" T="DataIndex" Dense="true" Hover="true" Context="data"
              ServerData="@OnDataIndexRequested">
        <ToolBarContent>
            <MudText Typo="Typo.h2">Data for @_selectedDate.Value.ToString(DateHelper.UiDayFormat)</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Signalled</MudTh>
            <MudTh>Hash</MudTh>
            <MudTh>Classification</MudTh>
            <MudTh>Kind</MudTh>
            <MudTh>Timestamp</MudTh>
            <MudTh>Signal</MudTh>
            <MudTh>Reference</MudTh>
        </HeaderContent>
        <ColGroup>
            <col Style="width: 190px;"/>
            <col Style="width: 170px;"/>
            <col/>
            <col Style="width: 200px;"/>
            <col Style="width: 300px;"/>
            <col Style="width: 320px;"/>
            <col Style="width: 320px;"/>
        </ColGroup>
        <RowTemplate>
            <MudTd DataLabel="Signalled">@data.SignalledAt</MudTd>
            <MudTd DataLabel="Hash">@data.Hash</MudTd>
            <MudTd DataLabel="Source">@data.Source</MudTd>
            <MudTd DataLabel="Kind">@data.Kind</MudTd>
            <MudTd DataLabel="Timestamp">
                @if (data.Kind == DataKind.Day)
                {
                    @data.Timestamp.ToString(DateHelper.UiDayFormat)
                }
                else
                {
                    @data.Timestamp.ToString(DateHelper.UiMinuteFormat)
                }
            </MudTd>
            <MudTd DataLabel="Signal">@data.SignalId</MudTd>
            <MudTd DataLabel="Reference">@data.ReferenceId</MudTd>
        </RowTemplate>
        <NoRecordsContent>
            <MudText>No matching records found</MudText>
        </NoRecordsContent>
        <PagerContent>
            <MudTablePager/>
        </PagerContent>
    </MudTable>
}